on:
  push:
    branches: [main]

jobs:
  sync-parent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout filho
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configura Git
        run: |
          git config --global user.name "GitHub Bot"
          git config --global user.email "bot@example.com"

      - name: Checkout repo-pai c/ submódulos
        uses: actions/checkout@v4
        with:
          repository: Lukas712/mono-repo-with-submodules
          token: ${{ secrets.GH_TOKEN }}
          path: mono-repo-with-submodules
          submodules: recursive
          fetch-depth: 0

      - name: Espera 5 segundos para garantir visibilidade do commit
        run: sleep 5

      - name: Atualiza todos submódulos pra branch principal
        run: |
          cd mono-repo-with-submodules
          git config user.name "GitHub Bot"
          git config user.email "bot@example.com"

          # Atualiza os submódulos
          git submodule update --remote --merge

          # Pega a URL do repositório atual
          current_repo_url="https://github.com/${{ github.repository }}.git"

          # Variável para armazenar a mensagem de commit do submódulo
          submodule_commit_message=""

          # Itera sobre os submódulos e verifica a URL
          git submodule foreach '
            submodule_url=$(git config --get remote.origin.url)
            
            # Remover espaços extras antes e depois da URL
            submodule_url=$(echo "$submodule_url" | xargs)
            current_repo_url=$(echo "$current_repo_url" | xargs)

            # Verifica se a URL do submódulo corresponde à URL do repositório atual
            if [ "$submodule_url" = "$current_repo_url" ]; then
              submodule_commit_message=$(git log -1 --pretty=%B)
              echo "Mensagem do commit do submódulo: $submodule_commit_message"
            fi
          '

          # Se a URL do submódulo corresponder à do repositório pai, faz o commit
          if [ -n "$submodule_commit_message" ]; then
            git add .
            git diff --cached --quiet || ( git commit -m "$submodule_commit_message" && git push )
          fi
