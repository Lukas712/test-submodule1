on:
  push:
    branches: [main]

jobs:
  sync-parent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout filho
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configura Git
        run: |
          git config --global user.name "GitHub Bot"
          git config --global user.email "bot@example.com"

      - name: Checkout repo-pai c/ submódulos
        uses: actions/checkout@v4
        with:
          repository: Lukas712/mono-repo-with-submodules
          token: ${{ secrets.GH_TOKEN }}
          path: mono-repo-with-submodules
          submodules: recursive
          fetch-depth: 0

      - name: Espera 5 segundos para garantir visibilidade do commit
        run: sleep 5

      - name: Atualiza todos submódulos pra branch principal
        run: |
          cd mono-repo-with-submodules
          git config user.name "GitHub Bot"
          git config user.email "bot@example.com"
          
          # Atualiza os submódulos
          git submodule update --remote --merge

          # URL do repositório original do submódulo que você quer comparar
          target_submodule_url="https://github.com/${{ github.repository }}.git"
          
          # Inicializa uma variável para salvar o nome do submódulo
          submodule_found="false"

          # Itera sobre o arquivo .gitmodules para pegar o caminho e URL dos submódulos
          while IFS= read -r line; do
            if [[ "$line" =~ path = (.*) ]]; then
              submodule_path="${BASH_REMATCH[1]}"
            elif [[ "$line" =~ url = (.*) ]]; then
              submodule_url="${BASH_REMATCH[1]}"

              # Comparar o URL do submódulo com o URL original
              if [ "$submodule_url" == "$target_submodule_url" ]; then
                submodule_found="true"
                echo "Submódulo encontrado: $submodule_path"
                break
              fi
            fi
          done < .gitmodules

          # Verifica se o submódulo foi encontrado
          if [ "$submodule_found" == "false" ]; then
            echo "Submódulo não encontrado para o URL fornecido: $target_submodule_url"
            exit 1
          fi

          # Captura a mensagem do último commit do submódulo
          submodule_commit_message=$(git log -1 --pretty=%B -- $submodule_path)

          # Faz o commit no repositório pai com a mensagem do submódulo
          git add .
          git diff --cached --quiet || ( git commit -m "$submodule_commit_message" && git push )
